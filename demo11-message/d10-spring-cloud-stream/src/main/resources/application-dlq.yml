# mybatis-plus配置
mybatis-plus:
  configuration:
    # 打印日志信息
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# 加上了死信队列相关配置
spring:
  cloud:
    stream:

      # Spring Cloud Stream Kafka 配置项
      kafka:
        # Kafka Binder 配置项，对应 KafkaBinderConfigurationProperties 类
        binder:
          brokers: 127.0.0.1:9092 #Kafka的消息中间件服务器
          auto-create-topics: true #设置自动创建Topic
          # 开启死信队列，需要设置成 all
          required-acks: all # 0-不等待任何确认。1-等待 leader 应答（默认）。all-等待所有 leader 和 follower 应答。

        # Kafka Binding 配置项，对应 KafkaBindingProperties 类
        bindings:
          vehicle_input:
            # Kafka Consumer 配置项，对应 KafkaConsumerProperties 类
            consumer:
              enable-dlq: true # 是否开启死信队列，默认为 false 关闭
              dlq-name: # 死信队列名，默认为 `error.{topicName}.{consumerGroup}`

      # Binding 配置项，对应 BindingProperties Map
      bindings:
        output:
          destination: demo_topic #消息发往的目的地
          content-type: text/plain #消息发送的格式，这里使用 text。发送字符串消息的时候需要配置，默认是 json格式
        input:
          destination: demo_topic #目的地
          group: demo_consumer_group #消费者分组
        # 自定义output - 生产
        face_output:
          destination: face_topic
          content-type: text/plain
        human_output:
          destination: human_topic
          content-type: application/json #默认是 application/json（可能会因版本而异）
        vehicle_output:
          destination: vehicle_topic
        # 自定义input - 消费
        face_input:
          destination: face_topic
          group: face_consumer_group
        human_input:
          destination: human_topic
          group: human_consumer_group
        vehicle_input:
          destination: vehicle_topic
          group: vehicle_consumer_group
          # Consumer 配置项，对应 ConsumerProperties 类
          consumer:
            max-attempts: 3 # 重试次数，默认为 3 次。包括第一次尝试，一共尝试消费 max-attempts 次。设为 1 则禁用重试。
            back-off-initial-interval: 3000 # 重试间隔的初始值，单位毫秒，默认为 1000
            back-off-multiplier: 2.0 # 重试间隔的递乘系数，默认为 2.0
            back-off-max-interval: 10000 # 重试间隔的最大值，单位毫秒，默认为 10000

#server:
#  port: ${random.int[10000,19999]} # 随机端口，方便启动多个消费者